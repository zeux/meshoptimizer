name: release

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '*.md'

jobs:
  gltfpack:
    strategy:
      matrix:
        os: [windows, ubuntu, macos]
    name: gltfpack-${{matrix.os}}
    runs-on: ${{matrix.os}}-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: zeux/basis_universal
          ref: gltfpack
          path: basis_universal
      - name: cmake configure
        run: cmake . -DMESHOPT_BUILD_GLTFPACK=ON -DMESHOPT_BASISU_PATH=basis_universal -DMESHOPT_WERROR=ON -DCMAKE_MSVC_RUNTIME_LIBRARY="MultiThreaded" -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"
      - name: cmake build
        run: cmake --build . --target gltfpack --config Release -j 2
      - uses: actions/upload-artifact@v4
        with:
          name: gltfpack-windows
          path: Release/gltfpack.exe
        if: matrix.os == 'windows'
      - uses: actions/upload-artifact@v4
        with:
          name: gltfpack-${{matrix.os}}
          path: gltfpack
        if: matrix.os != 'windows'

  nodejs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: install wasi
        run: |
          curl -sL https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-$VERSION/wasi-sdk-$VERSION.0-x86_64-linux.deb > wasi-sdk.deb
          sudo dpkg -i wasi-sdk.deb
        env:
          VERSION: 25
      - name: build
        run: |
          make -j2 -B gltf/library.wasm js
          git status
      - name: npm pack
        run: |
          cp LICENSE.md gltf/
          cp LICENSE.md js/
          cd gltf && npm pack && cd ..
          cd js && npm pack && cd ..
      - uses: actions/upload-artifact@v4
        with:
          name: gltfpack-npm
          path: gltf/gltfpack-*.tgz
      - uses: actions/upload-artifact@v4
        with:
          name: meshoptimizer-npm
          path: js/meshoptimizer-*.tgz

  python:
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
    runs-on: ${{matrix.os}}-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for setuptools_scm to determine version

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install package
      run: |
        python -m pip install --upgrade pip
        pip install build
        cd python
        pip install -e .

    - name: Run tests
      run: |
        cd python
        python -m unittest discover -v

    # - name: Build package
    #   run: |
    #     python -m build --sdist
    #   if: matrix.os == 'ubuntu'

    # - name: Store package
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: python-package
    #     path: python/dist/*
    #   if: matrix.os == 'ubuntu'